{"ast":null,"code":"import { catchError, finalize } from 'rxjs/operators';\nimport { PostFeedComponent } from '../post-feed/post-feed.component';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../..//services/grapql.service\";\nfunction PostPaginatorComponent_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵtext(1, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostPaginatorComponent_Conditional_1_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function PostPaginatorComponent_Conditional_1_Conditional_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.previousPage());\n    });\n    i0.ɵɵtext(1, \"\\u041D\\u0430\\u0437\\u0430\\u0434\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostPaginatorComponent_Conditional_1_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function PostPaginatorComponent_Conditional_1_Conditional_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.nextPage());\n    });\n    i0.ɵɵtext(1, \"\\u0412\\u043F\\u0435\\u0440\\u0435\\u0434\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostPaginatorComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-post-feed\", 2);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵtemplate(2, PostPaginatorComponent_Conditional_1_Conditional_2_Template, 2, 0, \"button\")(3, PostPaginatorComponent_Conditional_1_Conditional_3_Template, 2, 0, \"button\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"posts\", ctx_r1.posts);\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(ctx_r1.hasPreviousPage ? 2 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.hasNextPage ? 3 : -1);\n  }\n}\nfunction PostPaginatorComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtext(1, \"\\u041F\\u043E\\u0441\\u0442\\u044B \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let PostPaginatorComponent = /*#__PURE__*/(() => {\n  class PostPaginatorComponent {\n    graphQLService;\n    posts = [];\n    currentStartCursor;\n    currentEndCursor;\n    hasNextPage = false;\n    hasPreviousPage = false;\n    totalCount = 0;\n    loading = false;\n    pageSize = 10;\n    constructor(graphQLService) {\n      this.graphQLService = graphQLService;\n    }\n    ngOnInit() {\n      this.loadPosts();\n    }\n    //first: ${after ? this.pageSize : \"null\"}\n    loadPosts(before, after) {\n      this.loading = true;\n      const query = `\n      query  {\n        postsPaging(\n          first: ${this.pageSize}\n          after: ${after ? `\"${after}\"` : \"null\"}\n          last: ${before ? this.pageSize : \"null\"}\n          before: ${before ? `\"${before}\"` : \"null\"}\n          order: { dateCreate: ASC }\n          where: { userAuthorId: { eq: ${this.graphQLService.getUserId()} } }\n        ) {\n          totalCount\n          pageInfo {\n            endCursor\n            hasNextPage\n            hasPreviousPage\n            startCursor\n          }\n          nodes {\n            title\n            id\n            getImage\n            user {\n              nickName\n            }\n            tags {\n              id\n              name\n            }\n          }\n        }\n      }\n    `;\n      console.log(query);\n      this.graphQLService.RequestString({\n        query: query\n      }).pipe(catchError(error => {\n        console.error('Error loading posts:', error);\n        console.log(\"хз что происходит\");\n        throw error;\n      }), finalize(() => this.loading = false)).subscribe({\n        next: response => {\n          console.log('Полный ответ сервера:', response);\n          if (response?.data?.postsPaging) {\n            const data = response.data.postsPaging;\n            // Используем spread оператор для триггера Change Detection\n            this.posts = [...data.nodes];\n            this.totalCount = data.totalCount;\n            this.currentStartCursor = data.pageInfo.startCursor;\n            this.currentEndCursor = data.pageInfo.endCursor;\n            this.hasNextPage = data.pageInfo.hasNextPage;\n            this.hasPreviousPage = data.pageInfo.hasPreviousPage;\n            console.log('Данные успешно обновлены:', this.posts);\n          } else {\n            console.warn('Некорректная структура ответа');\n            this.posts = [];\n          }\n        },\n        error: err => {\n          console.error('Ошибка подписки:', err);\n          this.posts = [];\n        }\n      });\n      console.log('Данные успешно обновлены:', this.posts);\n    }\n    nextPage() {\n      if (this.hasNextPage) {\n        this.loadPosts(undefined, this.currentEndCursor);\n      }\n    }\n    previousPage() {\n      if (this.hasPreviousPage) {\n        this.loadPosts(this.currentStartCursor, undefined);\n      }\n    }\n    static ɵfac = function PostPaginatorComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PostPaginatorComponent)(i0.ɵɵdirectiveInject(i1.GraphQLService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PostPaginatorComponent,\n      selectors: [[\"app-post-paginator\"]],\n      decls: 3,\n      vars: 2,\n      consts: [[1, \"loading-indicator\"], [1, \"no-posts\"], [3, \"posts\"], [1, \"pagination-controls\"], [3, \"click\"]],\n      template: function PostPaginatorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, PostPaginatorComponent_Conditional_0_Template, 2, 0, \"div\", 0)(1, PostPaginatorComponent_Conditional_1_Template, 4, 3)(2, PostPaginatorComponent_Conditional_2_Template, 2, 0, \"div\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(ctx.loading ? 0 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.posts && ctx.posts.length > 0 ? 1 : !ctx.loading ? 2 : -1);\n        }\n      },\n      dependencies: [PostFeedComponent, CommonModule],\n      styles: [\".paginator-container[_ngcontent-%COMP%]{background-color:#1a1a1a;color:#e0e0e0;padding:20px;border-radius:8px;max-width:800px;margin:0 auto}.controls[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:20px;gap:15px}.nav-button[_ngcontent-%COMP%]{background-color:#2d2d2d;color:#fff;border:1px solid #404040;padding:8px 16px;border-radius:4px;cursor:pointer;transition:all .3s ease;min-width:100px}.nav-button[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#3d3d3d;border-color:#505050}.nav-button[_ngcontent-%COMP%]:disabled{background-color:#252525;color:#707070;cursor:not-allowed}.counter[_ngcontent-%COMP%]{flex-grow:1;text-align:center;font-size:.9em;color:#a0a0a0}\"]\n    });\n  }\n  return PostPaginatorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}