{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../services/grapql.service\";\nconst _forTrack0 = ($index, $item) => $item.id;\nfunction PostComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"img\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"src\", ctx_r0.post.getImage, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction PostComponent_For_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tag_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(tag_r2.name);\n  }\n}\nexport let PostComponent = /*#__PURE__*/(() => {\n  class PostComponent {\n    route;\n    QLService;\n    postId = 1;\n    post = {\n      id: 1,\n      title: 'Мой первый пост',\n      dateCreate: '2025-04-20',\n      timeCreate: '12:30',\n      userAuthorId: 42,\n      user: {\n        id: 42,\n        nickName: 'VladDev',\n        email: 'vlad@example.com',\n        roleId: 2,\n        role: {\n          id: 2,\n          roleName: 'User'\n        }\n      },\n      body: 'Это содержимое моего поста...',\n      tags: [{\n        id: 1,\n        name: 'Angular'\n      }, {\n        id: 2,\n        name: 'GraphQL'\n      }],\n      titleImage: 'image123.jpg',\n      getImage: 'https://russkiiyazyk.ru/wp-content/uploads/2018/06/Kartinka.jpg'\n    };\n    id;\n    constructor(route, QLService) {\n      this.route = route;\n      this.QLService = QLService;\n      // отслеживаем изменение параметра id\n      route.params.subscribe(params => this.id = params[\"id\"]);\n    }\n    ngOnInit() {\n      const query = {\n        query: `\n        query{\n  posts(where: { id: { eq: ${this.id} } }) {\n    body\n    getImage\n    tags {\n      id\n      name\n    }\n    title\n    titleImage\n    user {\n      nickName\n    }\n    userAuthorId\n    dateCreate\n  }\n}\n      `\n      };\n      this.QLService.RequestString(query).subscribe(response => {\n        if (response.data.posts.length > 0) {\n          this.post = response.data.posts[0];\n        } else {\n          console.error(\"Пост не найден\");\n        }\n      });\n    }\n    //сделать подсчёт на сервере \n    getLikeCount() {\n      return this.post?.grades?.filter(g => g.isLike).length ?? 0;\n    }\n    getDislikeCount() {\n      return this.post?.grades?.filter(g => !g.isLike).length ?? 0;\n    }\n    static ɵfac = function PostComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PostComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.GraphQLService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PostComponent,\n      selectors: [[\"app-post\"]],\n      inputs: {\n        postId: \"postId\"\n      },\n      decls: 18,\n      vars: 8,\n      consts: [[1, \"post-page\"], [1, \"post-meta\"], [1, \"author\"], [1, \"date\"], [1, \"post-title\"], [\"class\", \"post-image\", 4, \"ngIf\"], [1, \"post-body\", 3, \"innerHTML\"], [1, \"post-tags\"], [1, \"tag-label\"], [1, \"tags\"], [1, \"tag\"], [1, \"likes-info\"], [1, \"post-image\"], [\"alt\", \"Post image\", 3, \"src\"]],\n      template: function PostComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\", 2);\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"span\", 3);\n          i0.ɵɵtext(5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"h1\", 4);\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(8, PostComponent_div_8_Template, 2, 1, \"div\", 5);\n          i0.ɵɵelement(9, \"div\", 6);\n          i0.ɵɵelementStart(10, \"div\", 7)(11, \"span\", 8);\n          i0.ɵɵtext(12, \"\\u0422\\u044D\\u0433\\u0438:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"ul\", 9);\n          i0.ɵɵrepeaterCreate(14, PostComponent_For_15_Template, 2, 1, \"li\", 10, _forTrack0);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\", 11);\n          i0.ɵɵtext(17);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.post.user == null ? null : ctx.post.user.nickName);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate2(\"\", ctx.post.dateCreate, \" \", ctx.post.timeCreate, \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.post.title);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.post.getImage);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"innerHTML\", ctx.post.body, i0.ɵɵsanitizeHtml);\n          i0.ɵɵadvance(5);\n          i0.ɵɵrepeater(ctx.post.tags);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate2(\" \\uD83D\\uDC4D \", ctx.getLikeCount(), \" \\u00A0\\u00A0 \\uD83D\\uDC4E \", ctx.getDislikeCount(), \" \");\n        }\n      },\n      styles: [\".post-page[_ngcontent-%COMP%]{max-width:900px;margin:40px auto;padding:20px;background-color:#292828;color:#ddd;font-family:Segoe UI,sans-serif;border-radius:10px}.post-meta[_ngcontent-%COMP%]{display:flex;justify-content:space-between;font-size:14px;color:#999;margin-bottom:10px}.post-title[_ngcontent-%COMP%]{font-size:28px;margin-bottom:20px;color:#fff}.post-image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;border-radius:6px;margin-bottom:20px}.post-body[_ngcontent-%COMP%]{font-size:16px;line-height:1.6;margin-bottom:30px;color:#e0e0e0}.post-tags[_ngcontent-%COMP%]{margin-bottom:20px}.tag-label[_ngcontent-%COMP%]{font-weight:700;margin-right:10px}.tags[_ngcontent-%COMP%]{display:inline-flex;flex-wrap:wrap;gap:8px;list-style:none;padding:0;margin:0}.tag[_ngcontent-%COMP%]{background-color:#3d2a57;padding:4px 10px;border-radius:5px;font-size:14px;color:#fff}.likes-info[_ngcontent-%COMP%]{font-size:16px;margin-top:20px;text-align:right;color:#ccc}\"]\n    });\n  }\n  return PostComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}