{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/eajli/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/\\u0440\\u0430\\u0431\\u043E\\u0442\\u044B \\u0432 \\u0432\\u0443\\u0437\\u0435/\\u0434\\u0438\\u043F\\u043B\\u043E\\u043C/ForumClient/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '@angular/core';\nimport { PostPaginatorComponent } from '../../post-paginator/post-paginator.component';\nimport { firstValueFrom } from 'rxjs';\nlet ProfileComponent = class ProfileComponent {\n  graphQLService;\n  constructor(graphQLService) {\n    this.graphQLService = graphQLService;\n  }\n  loadUserPosts = (() => {\n    var _this = this;\n    return function () {\n      var _ref = _asyncToGenerator(function* (cursor, pageSize) {\n        const variables = {\n          first: pageSize,\n          after: cursor,\n          where: {\n            userAuthorId: {\n              eq: 1\n            }\n          }\n        };\n        const body = {\n          query: `\n        query ($first: Int, $after: String, $where: PostFilterInput) {\n          postsPaging(first: $first, after: $after, where: $where) {\n            totalCount\n            pageInfo {\n              endCursor\n              hasNextPage\n              hasPreviousPage\n              startCursor\n            }\n            nodes {\n              id\n              title\n            }\n          }\n        }\n      `,\n          variables\n        };\n        // Вот тут вместо Request(...) — вызываем ваш RequestString(...)\n        const response = yield firstValueFrom(_this.graphQLService.RequestString(body));\n        return response.data.postsPaging;\n      });\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  })();\n};\nProfileComponent = __decorate([Component({\n  selector: 'app-post-paginator',\n  templateUrl: './post-paginator.component.html',\n  styleUrls: ['./post-paginator.component.css'],\n  imports: [PostPaginatorComponent]\n})], ProfileComponent);\nexport { ProfileComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}