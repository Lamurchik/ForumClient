{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nlet LoginComponent = class LoginComponent {\n  // Переменные для хранения данных из формы\n  email = '';\n  password = '';\n  showPassword = false; // Флаг для отображения пароля\n  // Метод для переключения видимости пароля\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n  // В классе LoginComponent добавь свойство для иконки\n  get eyeIcon() {\n    return this.showPassword ? '◎' : '◉';\n  }\n  // Метод-заглушка для отправки формы (логика добавится позже)\n  onSubmit() {\n    console.log('Данные формы:', {\n      email: this.email,\n      password: this.password\n    });\n    // Здесь будет вызов API или другая логика авторизации\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: \"login-app\",\n  standalone: true,\n  imports: [FormsModule],\n  templateUrl: './Login.html',\n  styleUrl: './login.component.css'\n})], LoginComponent);\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}