{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/eajli/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/\\u0440\\u0430\\u0431\\u043E\\u0442\\u044B \\u0432 \\u0432\\u0443\\u0437\\u0435/\\u0434\\u0438\\u043F\\u043B\\u043E\\u043C/ForumClient/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { PostPaginatorComponent } from '../../post-paginator/post-paginator.component';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../..//..//services/grapql.service\";\nexport let ProfileComponent = /*#__PURE__*/(() => {\n  class ProfileComponent {\n    graphQLService;\n    constructor(graphQLService) {\n      this.graphQLService = graphQLService;\n    }\n    loadUserPosts = (() => {\n      var _this = this;\n      return function () {\n        var _ref = _asyncToGenerator(function* (cursor, pageSize) {\n          const variables = {\n            first: pageSize,\n            after: cursor,\n            where: {\n              userAuthorId: {\n                eq: 1\n              }\n            }\n          };\n          const body = {\n            query: `\n        query ($first: Int, $after: String, $where: PostFilterInput) {\n          postsPaging(first: $first, after: $after, where: $where) {\n            totalCount\n            pageInfo {\n              endCursor\n              hasNextPage\n              hasPreviousPage\n              startCursor\n            }\n            nodes {\n              id\n              title\n            }\n          }\n        }\n      `,\n            variables\n          };\n          // Вот тут вместо Request(...) — вызываем ваш RequestString(...)\n          const response = yield firstValueFrom(_this.graphQLService.RequestString(body));\n          return response.data.postsPaging;\n        });\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    })();\n    static ɵfac = function ProfileComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ProfileComponent)(i0.ɵɵdirectiveInject(i1.GraphQLService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProfileComponent,\n      selectors: [[\"app-post-paginator\"]],\n      decls: 1,\n      vars: 1,\n      consts: [[3, \"fetchPage\"]],\n      template: function ProfileComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-post-paginator\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"fetchPage\", ctx.loadUserPosts);\n        }\n      },\n      dependencies: [ProfileComponent, PostPaginatorComponent],\n      encapsulation: 2\n    });\n  }\n  return ProfileComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}