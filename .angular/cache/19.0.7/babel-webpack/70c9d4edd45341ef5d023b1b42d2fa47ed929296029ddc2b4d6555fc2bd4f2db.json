{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let EditorComponent = /*#__PURE__*/(() => {\n  class EditorComponent {\n    ngAfterViewInit() {\n      CKEDITOR.replace('editor1', {\n        extraPlugins: 'uploadimage,image2',\n        height: 300,\n        filebrowserImageUploadUrl: '/api/image/upload',\n        removePlugins: 'elementspath',\n        toolbar: [{\n          name: 'insert',\n          items: ['Image', 'Table']\n        }, {\n          name: 'basicstyles',\n          items: ['Bold', 'Italic']\n        }]\n      });\n    }\n    getData() {\n      return CKEDITOR.instances['editor1'].getData();\n    }\n    static ɵfac = function EditorComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EditorComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditorComponent,\n      selectors: [[\"app-editor\"]],\n      decls: 1,\n      vars: 2,\n      consts: [[3, \"ngModelChange\", \"ngModel\", \"config\"]],\n      template: function EditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ckeditor\", 0);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function EditorComponent_Template_ckeditor_ngModelChange_0_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.editorData, $event) || (ctx.editorData = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.editorData);\n          i0.ɵɵproperty(\"config\", ctx.editorConfig);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return EditorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}